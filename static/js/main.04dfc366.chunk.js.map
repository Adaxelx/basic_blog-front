{"version":3,"sources":["containers/FullScreen/FullScreen.jsx","context/UserContext.jsx","constants/config.js","views/News/components/Post/Post.jsx","views/Admin/components/Form/Form.jsx","views/Admin/Admin.jsx","views/Dashboard/Dashboard.jsx","views/Login/components/Form/Form.jsx","views/Login/Login.jsx","views/News/News.jsx","views/Quiz/Quiz.jsx","constants/routes.js","root/components/PrivateRoute/PrivateRoute.jsx","root/Router/Router.jsx","components/Navigation/Navigation.jsx","styles/themes/_core.js","styles/themes/default.js","styles/themes/dark.js","context/ThemeContext.jsx","components/ThemeSwitcher/ThemeSwitcher.jsx","styles/GlobalStyle.js","root/App/App.jsx","serviceWorker.js","index.js"],"names":["StyledFullScreen","styled","div","FullScreen","children","cookies","Cookies","UserContext","createContext","token","undefined","setToken","UserProvider","useState","get","vote","setVote","user","newToken","set","path","console","log","Provider","value","process","StyledPost","theme","colors","primary","main","StyledTitle","h3","StyledContent","p","StyledDate","small","deletePosts","id","a","url","headers","method","Origin","Authorization","fetch","response","status","json","Error","Post","title","content","date","splicePost","useContext","deletePost","e","type","onClick","StyledForm","form","StyledFormGroup","StyledLabel","label","StyledInput","input","StyledButton","button","sendPost","data","body","JSON","stringify","Form","setTitle","setContent","message","setMessage","handleSubmit","preventDefault","res","onSubmit","onChange","target","fetchPosts","Admin","posts","setPosts","useEffect","getPosts","arrayTmp","splice","findIndex","post","_id","map","key","Date","toISOString","Dashboard","loginUser","login","setLogin","password","setPassword","history","useHistory","push","Login","h1","StyledPostContainer","StyledFilter","text","News","setInput","StyledWrapper","fetchQuiz","sendAnswer","answer","paths","component","exact","quiz","setQuiz","setAnswer","getQuiz","questions","question","name","votes","Math","floor","isPrivate","PrivateRoute","rest","to","Router","routes","Component","StyledNav","nav","StyledLink","Link","Navigation","DASHBOARD","NEWS","ADMIN","QUIZ","bpValues","xs","s","m","l","xl","generateMQ","rule","resultValue","Object","keys","includes","common","black","white","font","base","family","light","regular","medium","bold","bp","values","max","v","min","time","shortest","shorter","short","standard","long","longer","longest","enteringScreen","leavingScreen","zIndex","elements","core","error","dart","ThemeContext","defaultTheme","ThemeProvider","currentTheme","setCurrentTheme","darkTheme","StyledContainer","StyledSwitcher","toRight","ThemeSwitcher","changeTheme","setDarkTheme","changeHandler","useCallback","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"kfAIA,IAAMA,EAAmBC,IAAOC,IAAV,KAePC,EANI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,kBAACJ,EAAD,KAAmBI,ICVlDC,EAAU,I,MAAIC,GAEPC,EAAcC,wBAAc,CACvCC,WAAOC,EACPC,SAAU,eA2BGC,EAxBM,SAAC,GAAkB,IAAhBR,EAAe,EAAfA,SAAe,EACXS,mBAASR,EAAQS,IAAI,UADV,mBAC9BL,EAD8B,KACvBE,EADuB,OAEbE,mBAASR,EAAQS,IAAI,SAFR,mBAE9BC,EAF8B,KAExBC,EAFwB,KAG/BC,EAAO,CACXR,QACAM,OACAJ,SAAU,SAACO,GACTb,EAAQc,IAAI,QAASD,EAAU,CAC7BE,KAAM,MAERT,EAASO,IAEXF,QAAS,WACPK,QAAQC,IAAI,MACZjB,EAAQc,IAAI,OAAQ,EAAG,CACrBC,KAAM,MAERJ,EAAQ,KAIZ,OAAO,kBAACT,EAAYgB,SAAb,CAAsBC,MAAOP,GAAOb,IC9B9BgB,EADFK,uC,0YCKb,IAAMC,EAAazB,IAAOC,IAAV,KAGM,qBAAGyB,MAAkBC,OAAOC,QAAQC,QAIpDC,EAAc9B,IAAO+B,GAAV,KAIXC,EAAgBhC,IAAOiC,EAAV,KACbC,EAAalC,IAAOmC,MAAV,KAEVC,EAAW,uCAAG,WAAO5B,EAAO6B,GAAd,mBAAAC,EAAA,6DACZC,EADY,UACHpB,EADG,6BACsBkB,EADtB,KAEZG,EAAU,CACdC,OAAQ,SACRD,QAAS,CACP,eAAgB,mBAChBE,OAAQ,KACRC,cAAc,SAAD,OAAWnC,KAPV,SAUKoC,MAAML,EAAKC,GAVhB,UAWM,OADlBK,EAVY,QAWLC,OAXK,yCAYTD,EAASE,QAZA,aAcZC,MAAM,cAdM,2CAAH,wDAyCFC,EAxBF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,KAAMf,EAAqB,EAArBA,GAAIgB,EAAiB,EAAjBA,WAClCrC,EAAOsC,qBAAWhD,GAElBiD,EAAU,uCAAG,WAAOC,EAAGnB,GAAV,SAAAC,EAAA,+EAETF,EAAYpB,EAAKR,MAAO6B,GAFf,OAGfgB,EAAWhB,GAHI,uGAAH,wDAOhB,OACE,kBAACZ,EAAD,KACE,kBAACK,EAAD,KAAcoB,GACd,kBAAChB,EAAD,KAAakB,GACb,kBAACpB,EAAD,KAAgBmB,GACfnC,EAAKR,OAAS6B,EACb,4BAAQoB,KAAK,SAASC,QAAS,SAACF,GAAD,OAAOD,EAAWC,EAAGnB,KAApD,KAGE,O,siBClDV,IAAMsB,EAAa3D,IAAO4D,KAAV,KAOVC,EAAkB7D,IAAOC,IAAV,KAIf6D,EAAc9D,IAAO+D,MAAV,KAIXC,EAAchE,IAAOiE,MAAV,KAEXC,EAAelE,IAAOmE,OAAV,KAKZC,EAAQ,uCAAG,WAAOC,EAAM7D,GAAb,mBAAA8B,EAAA,6DACTC,EADS,UACApB,EADA,mBAETqB,EAAU,CACdC,OAAQ,OACRD,QAAS,CACP,eAAgB,mBAChBE,OAAQ,KACRC,cAAc,SAAD,OAAWnC,IAE1B8D,KAAMC,KAAKC,UAAUH,IATR,SAWQzB,MAAML,EAAKC,GAXnB,UAYS,OADlBK,EAXS,QAYFC,OAZE,yCAaND,EAASE,QAbH,aAeTC,MAAM,aAfG,2CAAH,wDAwDCyB,EAtCF,WAAO,IAAD,EACS7D,mBAAS,IADlB,mBACVsC,EADU,KACHwB,EADG,OAEa9D,mBAAS,IAFtB,mBAEVuC,EAFU,KAEDwB,EAFC,OAGa/D,mBAAS,IAHtB,mBAGVgE,EAHU,KAGDC,EAHC,KAKX7D,EAAOsC,qBAAWhD,GAElBwE,EAAY,uCAAG,WAAOtB,GAAP,eAAAlB,EAAA,6DACnBkB,EAAEuB,iBADiB,kBAILX,EAAS,CAAElB,QAAOC,WAAWnC,EAAKR,OAJ7B,OAIjBwE,EAJiB,OAKjBH,EAAWG,EAAIJ,SACfF,EAAS,IACTC,EAAW,IAPM,kDASjBvD,QAAQC,IAAR,MATiB,0DAAH,sDAelB,OACE,kBAACsC,EAAD,CAAYsB,SAAU,SAACzB,GAAD,OAAOsB,EAAatB,KACxC,kBAACK,EAAD,KACE,kBAACC,EAAD,mBACA,kBAACE,EAAD,CAAazC,MAAO2B,EAAOgC,SAAU,SAAC1B,GAAD,OAAOkB,EAASlB,EAAE2B,OAAO5D,WAEhE,kBAACsC,EAAD,KACE,kBAACC,EAAD,gBACA,kBAACE,EAAD,CAAazC,MAAO4B,EAAS+B,SAAU,SAAC1B,GAAD,OAAOmB,EAAWnB,EAAE2B,OAAO5D,WAEnEqD,EAAU,2BAAIA,GAAe,KAC9B,kBAACV,EAAD,CAAcT,KAAK,UAAnB,WCvEA2B,EAAU,uCAAG,WAAO5E,GAAP,mBAAA8B,EAAA,6DACXC,EADW,UACFpB,EADE,cAEXqB,EAAU,CACdC,OAAQ,MACRD,QAAS,CACP,eAAgB,mBAChBE,OAAQ,KACRC,cAAc,SAAD,OAAWnC,KAPX,SAUMoC,MAAML,EAAKC,GAVjB,UAWO,OADlBK,EAVW,QAWJC,OAXI,yCAYRD,EAASE,QAZD,aAcXC,MAAM,aAdK,2CAAH,sDA2DDqC,EA1CD,WAAO,IAAD,EACQzE,mBAAS,IADjB,mBACX0E,EADW,KACJC,EADI,KAEZvE,EAAOsC,qBAAWhD,GAExBkF,qBAAU,YACM,uCAAG,4BAAAlD,EAAA,+EAEK8C,EAAWpE,EAAKR,OAFrB,OAEPwE,EAFO,OAGbO,EAASP,EAAIX,MAHA,uGAAH,qDAMdoB,KACC,IAEH,IAAMpC,EAAa,SAAChB,GAClB,IAAMqD,EAAQ,YAAOJ,GAErBI,EAASC,OACPD,EAASE,WAAU,SAACC,GAAD,OAAUA,EAAKC,MAAQzD,KAC1C,GAGFkD,EAASG,IAGX,OACE,kBAAC,EAAD,KACE,qCACA,kBAAC,EAAD,MAFF,OAGGJ,QAHH,IAGGA,OAHH,EAGGA,EAAOS,KAAI,gBAAG7C,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,KAAWf,EAA9B,EAAyByD,IAAzB,OACV,kBAAC,EAAD,CACEE,IAAK3D,EACLA,GAAIA,EACJa,MAAOA,EACPC,QAASA,EACTC,KAAM,IAAI6C,KAAK7C,GAAM8C,cACrB7C,WAAYA,SCvDP8C,EAFG,kBAAM,kBAAC,EAAD,O,siBCGxB,IAAMxC,GAAa3D,IAAO4D,KAAV,KAOVC,GAAkB7D,IAAOC,IAAV,KAIf6D,GAAc9D,IAAO+D,MAAV,KAIXC,GAAchE,IAAOiE,MAAV,KAEXC,GAAelE,IAAOmE,OAAV,KAKZiC,GAAS,uCAAG,WAAO/B,GAAP,mBAAA/B,EAAA,6DACVC,EADU,UACDpB,EADC,SAEVqB,EAAU,CACdC,OAAQ,OACRD,QAAS,CAAE,eAAgB,oBAC3B8B,KAAMC,KAAKC,UAAUH,IALP,SAOOzB,MAAML,EAAKC,GAPlB,UAQQ,OADlBK,EAPU,QAQHC,OARG,yCASPD,EAASE,QATF,aAWVC,MAAM,aAXI,2CAAH,sDAmDAyB,GArCF,WAAO,IAAD,EACS7D,mBAAS,IADlB,mBACVyF,EADU,KACHC,EADG,OAEe1F,mBAAS,IAFxB,mBAEV2F,EAFU,KAEAC,EAFA,KAGXC,EAAUC,cACV1F,EAAOsC,qBAAWhD,GAElBwE,EAAY,uCAAG,WAAOtB,GAAP,eAAAlB,EAAA,6DACnBkB,EAAEuB,iBADiB,kBAILqB,GAAU,CAAEC,QAAOE,aAJd,OAIjBvB,EAJiB,OAKjBhE,EAAKN,SAASsE,EAAIxE,OAClBiG,EAAQE,KAAK,UANI,gDAQjBvF,QAAQC,IAAR,MARiB,yDAAH,sDAYlB,OACE,kBAAC,GAAD,CAAY4D,SAAU,SAACzB,GAAD,OAAOsB,EAAatB,KACxC,kBAAC,GAAD,KACE,kBAAC,GAAD,cACA,kBAAC,GAAD,CAAajC,MAAO8E,EAAOnB,SAAU,SAAC1B,GAAD,OAAO8C,EAAS9C,EAAE2B,OAAO5D,WAEhE,kBAAC,GAAD,KACE,kBAAC,GAAD,mBACA,kBAAC,GAAD,CACEkC,KAAK,WACLlC,MAAOgF,EACPrB,SAAU,SAAC1B,GAAD,OAAOgD,EAAYhD,EAAE2B,OAAO5D,WAG1C,kBAAC,GAAD,CAAckC,KAAK,UAAnB,aChESmD,GAND,kBACZ,kBAAC,EAAD,KACE,kBAAC,GAAD,Q,6cCAJ,IAAM9E,GAAc9B,IAAO6G,GAAV,MACXC,GAAsB9G,IAAOC,IAAV,MAOnB8G,GAAe/G,IAAO4D,KAAV,MAIZI,GAAchE,IAAOiE,MAAV,MAEXC,GAAelE,IAAOmE,OAAV,MAEZiB,GAAU,uCAAG,WAAO4B,GAAP,mBAAA1E,EAAA,6DACXC,EADW,UACFpB,EADE,eACS6F,EAAI,WAAOA,GAAS,IACxCxE,EAAU,CACdC,OAAQ,MACRD,QAAS,CACP,eAAgB,mBAChBE,OAAQ,OANK,SASME,MAAML,EAAKC,GATjB,UAUO,OADlBK,EATW,QAUJC,OAVI,yCAWRD,EAASE,QAXD,aAaXC,MAAM,aAbK,2CAAH,sDAuDDiE,GAvCF,WAAO,IAAD,EACSrG,mBAAS,IADlB,mBACV0E,EADU,KACHC,EADG,OAES3E,mBAAS,IAFlB,mBAEVqD,EAFU,KAEHiD,EAFG,KAIjB1B,qBAAU,YACM,uCAAG,4BAAAlD,EAAA,+EAEK8C,KAFL,OAEPJ,EAFO,OAGb5D,QAAQC,IAAI2D,GACZO,EAASP,EAAIX,MAJA,yGAAH,qDAOdoB,KACC,IAEH,IAAMX,EAAY,uCAAG,WAAOtB,GAAP,eAAAlB,EAAA,6DACnBkB,EAAEuB,iBADiB,kBAGCK,GAAWnB,GAHZ,OAGXe,EAHW,OAIjBO,EAASP,EAAIX,MAJI,yGAAH,sDAQlB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,yBACA,kBAAC0C,GAAD,CAAc9B,SAAU,SAACzB,GAAD,OAAOsB,EAAatB,KAC1C,kBAAC,GAAD,CAAajC,MAAO0C,EAAOiB,SAAU,SAAC1B,GAAD,OAAO0D,EAAS1D,EAAE2B,OAAO5D,UAC9D,kBAAC,GAAD,CAAckC,KAAK,UAAnB,YAEF,kBAACqD,GAAD,KACGxB,EAAMS,KAAI,gBAAG7C,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,KAAnB,OACT,kBAAC,EAAD,CAAMF,MAAOA,EAAOC,QAASA,EAASC,KAAMA,U,2aChEtD,IAAMtB,GAAc9B,IAAO6G,GAAV,MAEXlD,GAAa3D,IAAO4D,KAAV,MAIVuD,GAAgBnH,IAAOC,IAAV,MAKb+D,GAAchE,IAAOiE,MAAV,MAEXC,GAAelE,IAAOmE,OAAV,MAEZiD,GAAS,uCAAG,gCAAA9E,EAAA,6DACVC,EADU,UACDpB,EADC,QAEVqB,EAAU,CACdC,OAAQ,MACRD,QAAS,CACP,eAAgB,mBAChBE,OAAQ,OANI,SASOE,MAAML,EAAKC,GATlB,UAWQ,OAFlBK,EATU,QAWHC,OAXG,yCAYPD,EAASE,QAZF,aAcVC,MAAM,aAdI,2CAAH,qDAiBTqE,GAAU,uCAAG,WAAOC,EAAQjF,GAAf,mBAAAC,EAAA,6DACXC,EADW,UACFpB,GADE,OACKmG,EADL,YACejF,GAC1BG,EAAU,CACdC,OAAQ,OACRD,QAAS,CACP,eAAgB,mBAChBE,OAAQ,OANK,SASME,MAAML,EAAKC,GATjB,UAWO,OAFlBK,EATW,QAWJC,OAXI,yCAYRD,EAASE,QAZD,aAcXC,MAAM,aAdK,2CAAH,wDCpCHuE,GACA,IADAA,GAEL,QAFKA,GAGL,QAHKA,GAIJ,SAIM,IACb,CACEpG,KAAMoG,GACNC,UAAWrB,EACXsB,OAAO,GAET,CACEtG,KAAMoG,GACNC,UAAWP,GACXQ,OAAO,GAET,CACEtG,KAAMoG,GACNC,UDgCS,WAAO,IAAD,IACO5G,mBAAS,IADhB,mBACV8G,EADU,KACJC,EADI,OAEW/G,mBAAS,IAFpB,mBAEV0G,EAFU,KAEFM,EAFE,KAGX5G,EAAOsC,qBAAWhD,GACxBkF,qBAAU,YACK,uCAAG,4BAAAlD,EAAA,+EAEM8E,KAFN,OAENpC,EAFM,OAGZ2C,EAAQ3C,EAAI,IAHA,uGAAH,qDAMb6C,KACC,IAEH,IAAM/C,EAAY,uCAAG,WAAOtB,GAAP,eAAAlB,EAAA,yDACnBkB,EAAEuB,iBACa,KAAXuC,EAFe,0CAIGD,GAAWC,EAAQI,EAAK5B,KAJ3B,OAITd,EAJS,OAKf5D,QAAQC,IAAI2D,EAAIX,MAChBsD,EAAQ3C,EAAIX,MACZrD,EAAKD,QAAQ,GAPE,4GAAH,sDAYlB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,CAAYkE,SAAU,SAACzB,GAAD,OAAOsB,EAAatB,KACxC,4BAAKkE,EAAKxE,OACV,kBAACiE,GAAD,eACGO,EAAKI,iBADR,aACG,EAAgB/B,KAAI,SAACgC,GAAD,OACnB,6BACG/G,EAAKF,KAAO,KACX,kBAAC,GAAD,CAAa2C,KAAK,QAAQuE,KAAK,OAAO9C,SAAU,kBAAM0C,EAAUG,EAAST,WAF7E,UAIMS,EAAST,QAJf,OAKItG,EAAKF,KAAL,4BACiBiH,EAASE,MAD1B,YACmCC,KAAKC,MACjCJ,EAASE,MAAQP,EAAKO,MAAS,KAFtC,KAII,SAMXjH,EAAKF,KACJ,4CAAc4G,EAAKO,MAAnB,oBAEA,kBAAC,GAAD,CAAcxE,KAAK,UAAnB,kBClFNgE,OAAO,GAET,CACEtG,KAAMoG,GACNC,UAAWnC,EACXoC,OAAO,EACPW,WAAW,GAEb,CACEjH,KA1BK,SA2BLqG,UAAWZ,GACXa,OAAO,ICrBIY,GAXM,SAAC,GAAwB,IAAtB7H,EAAqB,EAArBA,MAAU8H,EAAW,yBAQ3C,OANM9H,EACK,kBAAC,IAAU8H,GAEb,kBAAC,IAAD,CAAUC,GAAG,YCqBTC,GAvBA,WACb,IAAMxH,EAAOsC,qBAAWhD,GAExB,OACE,kBAAC,IAAD,KACGmI,GAAO1C,KAAI,YAAyD,IAA3C2C,EAA0C,EAArDlB,UAAsBrG,EAA+B,EAA/BA,KAAMiH,EAAyB,EAAzBA,UAAcE,EAAW,gDAClE,OAAIF,EAEA,kBAAC,GAAD,eAAcjH,KAAMA,EAAM6E,IAAK7E,GAAUmH,EAAzC,CAA+C9H,MAAOQ,EAAKR,QACzD,kBAACkI,EAAcJ,IAKnB,kBAAC,IAAD,eAAOnH,KAAMA,EAAM6E,IAAK7E,GAAUmH,GAChC,kBAACI,EAAcJ,S,6TCf3B,IAAMK,GAAY3I,IAAO4I,IAAV,MAOO,qBAAGlH,MAAkBC,OAAOC,QAAQC,QAGpDgH,GAAa7I,YAAO8I,IAAP9I,CAAH,MACL,qBAAG0B,MAAkBC,OAAOC,QAAQoF,QAgBhC+B,GAbI,WAAO,IAChBC,EAAiCzB,GAAtB0B,EAAsB1B,GAAhB2B,EAAgB3B,GAAT4B,EAAS5B,GACzC,OACE,kBAACoB,GAAD,KACE,kBAAC,GAAD,MACA,kBAACE,GAAD,CAAYN,GAAIS,GAAhB,yBACA,kBAACH,GAAD,CAAYN,GAAIU,GAAhB,oBACA,kBAACJ,GAAD,CAAYN,GAAIY,GAAhB,QACA,kBAACN,GAAD,CAAYN,GAAIW,GAAhB,W,SC5BAE,GAAW,CACfC,GAAI,EACJC,EAAG,IACHC,EAAG,IACHC,EAAG,KACHC,GAAI,MAGAC,GAAa,SAACC,EAAMpI,GACxB,IACMqI,EADaC,OAAOC,KAAKV,IAAUW,SAASxI,GACjB6H,GAAS7H,GAASA,EACnD,MAAM,WAAN,OAAkBoI,EAAlB,mBAAiCC,EAAjC,QAIa,IACbjI,OAAQ,CACNqI,OAAQ,CACNC,MAAO,UACPC,MAAO,YAGXC,KAAM,CACJC,KAAM,OACNC,OAAQ,QACRC,MAAO,IACPC,QAAS,IACTC,OAAQ,IACRC,KAAM,IACNnB,EAAG,SACHC,EAAG,OACHC,EAAG,WAELkB,GAAI,CACFC,OAAQvB,GACRwB,IAAK,SAACC,GAAD,OAAOnB,GAAW,MAAOmB,IAC9BC,IAAK,SAACD,GAAD,OAAOnB,GAAW,MAAOmB,KAEhCE,KAAM,CACJC,SAAU,IACVC,QAAS,IACTC,MAAO,IACPC,SAAU,IACVC,KAAM,IACNC,OAAQ,IACRC,QAAS,IACTC,eAAgB,IAChBC,cAAe,KAEjBC,OAAQ,GACRC,SAAU,IChDG,mBACVC,GADL,CAEEhK,OAAO,gBACFgK,GAAKhK,OADJ,CAEJ2C,KAAM,UACN0C,KAAM,UACN4E,MAAO,UACPhK,QAAS,CACPC,KAAM,UACNyI,MAAO,UACPuB,KAAM,UACN7E,KAAM,eCXG,mBACV2E,GADL,CAEEhK,OAAO,gBACFgK,GAAKhK,OADJ,CAEJ2C,KAAM,UACN0C,KAAM,UACN4E,MAAO,UACPhK,QAAS,CACPC,KAAM,UACNyI,MAAO,UACPuB,KAAM,UACN7E,KAAM,eCPN8E,GAAevL,wBAAcwL,IAE3BzK,GAAawK,GAAbxK,SAyBO0K,GAvBO,SAAC,GAAkB,IAAhB7L,EAAe,EAAfA,SAAe,EACES,mBAASmL,IADX,mBAC/BE,EAD+B,KACjBC,EADiB,KAUtC,OACE,kBAAC5K,GAAD,CAAUC,MATQ,SAACG,GACnB,OAAQA,GACN,IAAK,OACH,OAAOwK,EAAgBC,IACzB,QACE,OAAOD,EAAgBH,OAKzB,kBAAC,IAAD,CAAiBrK,MAAOuK,GAAe9L,K,oZClB7C,IAEMiM,GAAkBpM,IAAOC,IAAV,MACT,gBAAGyB,EAAH,EAAGA,MAAH,0BAA4BA,EAAMC,OAAOqF,QAHxC,eAUPqF,GAAiBrM,IAAOC,IAAV,MACR,gBAAGyB,EAAH,EAAGA,MAAH,0BAA4BA,EAAMC,OAAO2C,QAXxC,eAeG,qBAAG5C,MAAkBC,OAAOqF,QAC5B,qBAAGtF,MAAkBqJ,KAAKI,YAC3B,qBAAGmB,SAAqB,qBAjB1B,OAiB0B,QAoBxBC,GAjBO,WACpB,IAAMC,EDM6BlJ,qBAAWwI,ICPpB,EAEQlL,oBAAS,GAFjB,mBAEnBuL,EAFmB,KAERM,EAFQ,KAIpBC,EAAgBC,uBAAY,kBAAMF,GAAa,SAACR,GAAD,OAAmBA,OAAe,IAIvF,OAHAzG,qBAAU,WACRgH,EAAYL,EAAY,OAAS,aAChC,CAACA,EAAWK,IAEb,kBAACJ,GAAD,CAAiB1I,QAASgJ,GACxB,kBAACL,GAAD,CAAgBC,QAASH,M,sWChC/B,IAceS,GAdKC,YAAH,MAEA,qBAAGnL,MAAkBC,OAAOqF,QACjB,qBAAGtF,MAAkBC,OAAO2C,QCiBzCwI,GAdH,WACV,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,UCDUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2D,MCbnCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACnC,GACNxK,QAAQwK,MAAMA,EAAMhH,c","file":"static/js/main.04dfc366.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledFullScreen = styled.div`\n  min-height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FullScreen = ({ children }) => <StyledFullScreen>{children}</StyledFullScreen>;\n\nFullScreen.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n};\n\nexport default FullScreen;\n","import React, { createContext, useState } from 'react';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport const UserContext = createContext({\n  token: undefined,\n  setToken: () => {},\n});\n\nconst UserProvider = ({ children }) => {\n  const [token, setToken] = useState(cookies.get('token'));\n  const [vote, setVote] = useState(cookies.get('vote'));\n  const user = {\n    token,\n    vote,\n    setToken: (newToken) => {\n      cookies.set('token', newToken, {\n        path: '/',\n      });\n      setToken(newToken);\n    },\n    setVote: () => {\n      console.log('xd');\n      cookies.set('vote', 1, {\n        path: '/',\n      });\n      setVote(1);\n    },\n  };\n\n  return <UserContext.Provider value={user}>{children}</UserContext.Provider>;\n};\n\nexport default UserProvider;\n","const path = process.env.REACT_APP_BACK_URL;\nexport default path;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from 'context/UserContext';\nimport path from 'constants/config';\n\nconst StyledPost = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.primary.main};\n  padding: 0 15px;\n`;\n\nconst StyledTitle = styled.h3`\n  text-align: center;\n`;\n\nconst StyledContent = styled.p``;\nconst StyledDate = styled.small``;\n\nconst deletePosts = async (token, id) => {\n  const url = `${path}admin/news/delete/${id}/`;\n  const headers = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Origin: null,\n      Authorization: `Token ${token}`,\n    },\n  };\n  const response = await fetch(url, headers);\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw Error('deletePost');\n};\n\nconst Post = ({ title, content, date, id, splicePost }) => {\n  const user = useContext(UserContext);\n\n  const deletePost = async (e, id) => {\n    try {\n      await deletePosts(user.token, id);\n      splicePost(id);\n    } catch (err) {}\n  };\n\n  return (\n    <StyledPost>\n      <StyledTitle>{title}</StyledTitle>\n      <StyledDate>{date}</StyledDate>\n      <StyledContent>{content}</StyledContent>\n      {user.token && id ? (\n        <button type=\"button\" onClick={(e) => deletePost(e, id)}>\n          X\n        </button>\n      ) : null}\n    </StyledPost>\n  );\n};\n\nexport default Post;\n","import React, { useState, useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from 'context/UserContext';\nimport path from 'constants/config';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst StyledFormGroup = styled.div`\n  margin-top: 2rem;\n`;\n\nconst StyledLabel = styled.label`\n  margin-right: 0.5rem;\n`;\n\nconst StyledInput = styled.input``;\n\nconst StyledButton = styled.button`\n  margin-top: 0.5rem;\n  align-self: flex-end;\n`;\n\nconst sendPost = async (data, token) => {\n  const url = `${path}admin/news/add/`;\n  const headers = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Origin: null,\n      Authorization: `Token ${token}`,\n    },\n    body: JSON.stringify(data),\n  };\n  const response = await fetch(url, headers);\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw Error('loginUser');\n};\n\nconst Form = () => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [message, setMessage] = useState('');\n\n  const user = useContext(UserContext);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let res;\n    try {\n      res = await sendPost({ title, content }, user.token);\n      setMessage(res.message);\n      setTitle('');\n      setContent('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // brak walidacji\n\n  return (\n    <StyledForm onSubmit={(e) => handleSubmit(e)}>\n      <StyledFormGroup>\n        <StyledLabel>Tytuł</StyledLabel>\n        <StyledInput value={title} onChange={(e) => setTitle(e.target.value)} />\n      </StyledFormGroup>\n      <StyledFormGroup>\n        <StyledLabel>Kontent</StyledLabel>\n        <StyledInput value={content} onChange={(e) => setContent(e.target.value)} />\n      </StyledFormGroup>\n      {message ? <p>{message}</p> : null}\n      <StyledButton type=\"submit\">Dodaj</StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect, useContext } from 'react';\nimport FullScreen from 'containers/FullScreen';\nimport { UserContext } from 'context/UserContext';\nimport Post from 'views/News/components/Post';\nimport path from 'constants/config';\nimport Form from './components/Form';\n\nconst fetchPosts = async (token) => {\n  const url = `${path}admin/news`;\n  const headers = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Origin: null,\n      Authorization: `Token ${token}`,\n    },\n  };\n  const response = await fetch(url, headers);\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw Error('loginUser');\n};\n\nconst Admin = () => {\n  const [posts, setPosts] = useState([]);\n  const user = useContext(UserContext);\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const res = await fetchPosts(user.token);\n        setPosts(res.data);\n      } catch (e) {}\n    };\n    getPosts();\n  }, []);\n\n  const splicePost = (id) => {\n    const arrayTmp = [...posts];\n\n    arrayTmp.splice(\n      arrayTmp.findIndex((post) => post._id === id),\n      1,\n    );\n\n    setPosts(arrayTmp);\n  };\n\n  return (\n    <FullScreen>\n      <h1>Admin</h1>\n      <Form />\n      {posts?.map(({ title, content, date, _id: id }) => (\n        <Post\n          key={id}\n          id={id}\n          title={title}\n          content={content}\n          date={new Date(date).toISOString()}\n          splicePost={splicePost}\n        />\n      ))}\n    </FullScreen>\n  );\n};\nexport default Admin;\n","import React from 'react';\nimport FullScreen from 'containers/FullScreen';\n\nconst Dashboard = () => <FullScreen />;\n\nexport default Dashboard;\n","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from 'context/UserContext';\nimport path from 'constants/config';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst StyledFormGroup = styled.div`\n  margin-top: 2rem;\n`;\n\nconst StyledLabel = styled.label`\n  margin-right: 0.5rem;\n`;\n\nconst StyledInput = styled.input``;\n\nconst StyledButton = styled.button`\n  margin-top: 0.5rem;\n  align-self: flex-end;\n`;\n\nconst loginUser = async (data) => {\n  const url = `${path}login`;\n  const headers = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  };\n  const response = await fetch(url, headers);\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw Error('loginUser');\n};\n\nconst Form = () => {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const user = useContext(UserContext);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let res;\n    try {\n      res = await loginUser({ login, password });\n      user.setToken(res.token);\n      history.push('/admin');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={(e) => handleSubmit(e)}>\n      <StyledFormGroup>\n        <StyledLabel>Login</StyledLabel>\n        <StyledInput value={login} onChange={(e) => setLogin(e.target.value)} />\n      </StyledFormGroup>\n      <StyledFormGroup>\n        <StyledLabel>Hasło</StyledLabel>\n        <StyledInput\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </StyledFormGroup>\n      <StyledButton type=\"submit\">Zaloguj</StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport FullScreen from 'containers/FullScreen';\nimport Form from './components/Form';\n\nconst Login = () => (\n  <FullScreen>\n    <Form />\n  </FullScreen>\n);\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport FullScreen from 'containers/FullScreen';\nimport styled from 'styled-components';\nimport path from 'constants/config';\nimport Post from './components/Post';\n\nconst StyledTitle = styled.h1``;\nconst StyledPostContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  margin: 0 auto;\n`;\n\nconst StyledFilter = styled.form`\n  margin-bottom: 2em;\n`;\n\nconst StyledInput = styled.input``;\n\nconst StyledButton = styled.button``;\n\nconst fetchPosts = async (text) => {\n  const url = `${path}news${text ? `/${text}` : ''}`;\n  const headers = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Origin: null,\n    },\n  };\n  const response = await fetch(url, headers);\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw Error('loginUser');\n};\n\nconst News = () => {\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const res = await fetchPosts();\n        console.log(res);\n        setPosts(res.data);\n      } catch (e) {}\n    };\n    getPosts();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await fetchPosts(input);\n      setPosts(res.data);\n    } catch (e) {}\n  };\n\n  return (\n    <FullScreen>\n      <StyledTitle>Aktualności</StyledTitle>\n      <StyledFilter onSubmit={(e) => handleSubmit(e)}>\n        <StyledInput value={input} onChange={(e) => setInput(e.target.value)} />\n        <StyledButton type=\"submit\">Filtruj</StyledButton>\n      </StyledFilter>\n      <StyledPostContainer>\n        {posts.map(({ title, content, date }) => (\n          <Post title={title} content={content} date={date} />\n        ))}\n      </StyledPostContainer>\n    </FullScreen>\n  );\n};\n\nexport default News;\n","import React, { useState, useEffect, useContext } from 'react';\nimport FullScreen from 'containers/FullScreen';\nimport styled from 'styled-components';\nimport { UserContext } from 'context/UserContext';\nimport path from 'constants/config';\n\nconst StyledTitle = styled.h1``;\n\nconst StyledForm = styled.form`\n  margin-bottom: 2em;\n`;\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledInput = styled.input``;\n\nconst StyledButton = styled.button``;\n\nconst fetchQuiz = async () => {\n  const url = `${path}quiz`;\n  const headers = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Origin: null,\n    },\n  };\n  const response = await fetch(url, headers);\n\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw Error('fetchQuiz');\n};\n\nconst sendAnswer = async (answer, id) => {\n  const url = `${path}${answer}/${id}`;\n  const headers = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Origin: null,\n    },\n  };\n  const response = await fetch(url, headers);\n\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw Error('fetchQuiz');\n};\n\nconst Quiz = () => {\n  const [quiz, setQuiz] = useState({});\n  const [answer, setAnswer] = useState('');\n  const user = useContext(UserContext);\n  useEffect(() => {\n    const getQuiz = async () => {\n      try {\n        const res = await fetchQuiz();\n        setQuiz(res[0]);\n      } catch (e) {}\n    };\n    getQuiz();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (answer !== '') {\n      try {\n        const res = await sendAnswer(answer, quiz._id);\n        console.log(res.data);\n        setQuiz(res.data);\n        user.setVote(1);\n      } catch (e) {}\n    }\n  };\n\n  return (\n    <FullScreen>\n      <StyledTitle>Quiz</StyledTitle>\n      <StyledForm onSubmit={(e) => handleSubmit(e)}>\n        <h3>{quiz.title}</h3>\n        <StyledWrapper>\n          {quiz.questions?.map((question) => (\n            <div>\n              {user.vote ? null : (\n                <StyledInput type=\"radio\" name=\"quiz\" onChange={() => setAnswer(question.answer)} />\n              )}\n              {`${question.answer}${\n                user.vote\n                  ? `, głosów: ${question.votes} ${Math.floor(\n                      (question.votes / quiz.votes) * 100,\n                    )}%`\n                  : ''\n              }`}\n            </div>\n          ))}\n        </StyledWrapper>\n\n        {user.vote ? (\n          <p>{`Oddano ${quiz.votes} głosów`}</p>\n        ) : (\n          <StyledButton type=\"submit\">Wyślij</StyledButton>\n        )}\n      </StyledForm>\n    </FullScreen>\n  );\n};\n\nexport default Quiz;\n","import { Dashboard, Login, Admin, Quiz, News } from 'views';\n\nexport const paths = {\n  DASHBOARD: '/',\n  NEWS: '/news',\n  QUIZ: '/quiz',\n  ADMIN: '/admin',\n  LOGIN: '/login',\n};\n\nexport default [\n  {\n    path: paths.DASHBOARD,\n    component: Dashboard,\n    exact: true,\n  },\n  {\n    path: paths.NEWS,\n    component: News,\n    exact: true,\n  },\n  {\n    path: paths.QUIZ,\n    component: Quiz,\n    exact: true,\n  },\n  {\n    path: paths.ADMIN,\n    component: Admin,\n    exact: true,\n    isPrivate: true,\n  },\n  {\n    path: paths.LOGIN,\n    component: Login,\n    exact: true,\n  },\n];\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ token, ...rest }) => {\n  const checkIfValid = () => {\n    if (token) {\n      return <Route {...rest} />;\n    }\n    return <Redirect to=\"/login\" />;\n  };\n\n  return checkIfValid();\n};\n\nexport default PrivateRoute;\n","import React, { useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport routes from 'constants/routes';\nimport { UserContext } from 'context/UserContext';\nimport PrivateRoute from '../components/PrivateRoute';\n\nconst Router = () => {\n  const user = useContext(UserContext);\n\n  return (\n    <Switch>\n      {routes.map(({ component: Component, path, isPrivate, ...rest }) => {\n        if (isPrivate) {\n          return (\n            <PrivateRoute path={path} key={path} {...rest} token={user.token}>\n              <Component {...rest} />\n            </PrivateRoute>\n          );\n        }\n        return (\n          <Route path={path} key={path} {...rest}>\n            <Component {...rest} />\n          </Route>\n        );\n      })}\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { paths } from 'constants/routes';\nimport { ThemeSwitcher } from 'components';\n\nconst StyledNav = styled.nav`\n  position: fixed;\n  height: 100px;\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.primary.main};\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.primary.text};\n`;\n\nconst Navigation = () => {\n  const { DASHBOARD, NEWS, ADMIN, QUIZ } = paths;\n  return (\n    <StyledNav>\n      <ThemeSwitcher />\n      <StyledLink to={DASHBOARD}>Strona główna</StyledLink>\n      <StyledLink to={NEWS}>Aktualności</StyledLink>\n      <StyledLink to={QUIZ}>Quiz</StyledLink>\n      <StyledLink to={ADMIN}>Admin</StyledLink>\n    </StyledNav>\n  );\n};\n\nexport default Navigation;\n","const bpValues = {\n  xs: 0,\n  s: 460,\n  m: 768,\n  l: 1280,\n  xl: 1920,\n};\n\nconst generateMQ = (rule, value) => {\n  const predefined = Object.keys(bpValues).includes(value);\n  const resultValue = predefined ? bpValues[value] : value;\n  return `@media (${rule}-width: ${resultValue}px)`;\n};\n\nexport { bpValues };\nexport default {\n  colors: {\n    common: {\n      black: '#000000',\n      white: '#FFFFFF',\n    },\n  },\n  font: {\n    base: '16px',\n    family: 'Arial',\n    light: 300,\n    regular: 400,\n    medium: 500,\n    bold: 700,\n    s: '.85rem',\n    m: '1rem',\n    l: '1.15rem',\n  },\n  bp: {\n    values: bpValues,\n    max: (v) => generateMQ('max', v),\n    min: (v) => generateMQ('min', v),\n  },\n  time: {\n    shortest: 150,\n    shorter: 200,\n    short: 250,\n    standard: 300,\n    long: 350,\n    longer: 400,\n    longest: 450,\n    enteringScreen: 225,\n    leavingScreen: 195,\n  },\n  zIndex: {},\n  elements: {},\n};\n","import core from 'styles/themes/_core';\n\nexport default {\n  ...core,\n  colors: {\n    ...core.colors,\n    body: '#ffffff',\n    text: '#000000',\n    error: '#aa0000',\n    primary: {\n      main: '#464AF0',\n      light: '#8E63FF',\n      dart: '#4E23FF',\n      text: '#E2E2E2',\n    },\n  },\n};\n","import core from 'styles/themes/_core';\n\nexport default {\n  ...core,\n  colors: {\n    ...core.colors,\n    body: '#040404',\n    text: '#fafafa',\n    error: '#ff0000',\n    primary: {\n      main: '#6E43FF',\n      light: '#8E63FF',\n      dart: '#4E23FF',\n      text: '#E2E2E2',\n    },\n  },\n};\n","import React, { createContext, useState, useContext } from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { defaultTheme, darkTheme } from 'styles/themes';\n\nconst ThemeContext = createContext(defaultTheme);\n\nconst { Provider } = ThemeContext;\n\nconst ThemeProvider = ({ children }) => {\n  const [currentTheme, setCurrentTheme] = useState(defaultTheme);\n  const changeTheme = (theme) => {\n    switch (theme) {\n      case 'DARK':\n        return setCurrentTheme(darkTheme);\n      default:\n        return setCurrentTheme(defaultTheme);\n    }\n  };\n  return (\n    <Provider value={changeTheme}>\n      <SCThemeProvider theme={currentTheme}>{children}</SCThemeProvider>\n    </Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useThemeContext } from 'context/ThemeContext';\n\nconst size = '2rem';\n\nconst StyledContainer = styled.div`\n  border: ${({ theme }) => `2px solid ${theme.colors.text}`};\n  border-radius: 100px;\n  height: ${size};\n  width: calc(${size} * 2);\n  cursor: pointer;\n`;\n\nconst StyledSwitcher = styled.div`\n  border: ${({ theme }) => `1px solid ${theme.colors.body}`};\n  border-radius: 100%;\n  height: calc(${size} - 4px);\n  width: calc(${size} - 4px);\n  background: ${({ theme }) => theme.colors.text};\n  transition: ${({ theme }) => theme.time.standard}ms;\n  transform: ${({ toRight }) => toRight && `translateX(${size})`};\n`;\n\nconst ThemeSwitcher = () => {\n  const changeTheme = useThemeContext();\n  const [darkTheme, setDarkTheme] = useState(false);\n  //   const changeHandler = () => setDarkTheme(!darkTheme); -> to robi to samo w sumie\n  const changeHandler = useCallback(() => setDarkTheme((currentTheme) => !currentTheme), []);\n  useEffect(() => {\n    changeTheme(darkTheme ? 'DARK' : 'DEFAULT');\n  }, [darkTheme, changeTheme]);\n  return (\n    <StyledContainer onClick={changeHandler}>\n      <StyledSwitcher toRight={darkTheme} />\n    </StyledContainer>\n  );\n};\n\nThemeSwitcher.propTypes = {};\n\nexport default ThemeSwitcher;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        color: ${({ theme }) => theme.colors.text};\n        background-color: ${({ theme }) => theme.colors.body};\n        font-family: 'Poppins', sans-serif;\n        overflow-x: hidden;\n    }\n    * {\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Router from 'root/Router';\nimport { Navigation } from 'components';\nimport GlobalStyle from 'styles/GlobalStyle';\nimport ThemeProvider from 'context/ThemeContext';\nimport UserProvider from 'context/UserContext';\n\nconst App = () => {\n  return (\n    <ThemeProvider>\n      <UserProvider>\n        <GlobalStyle />\n        <BrowserRouter>\n          <Navigation />\n          <Router />\n        </BrowserRouter>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'root/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'styles/reset.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}